from app.estimate_model import estimate_price_basic
from datetime import datetime
import streamlit as st
from next_page import next_page


# –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
def main_page():
    st.title("üöó –°–∏—Å—Ç–µ–º–∞ –æ—Ü–µ–Ω–∫–∏ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –∞–≤—Ç–æ–º–æ–±–∏–ª—è")
    st.markdown("---")
    
    col1, col2 = st.columns(2)
    
    with col1:
        st.header("–î–∞–Ω–Ω—ã–µ –∞–≤—Ç–æ–º–æ–±–∏–ª—è")
        st.session_state.car_data['mark'] = st.selectbox("–ú–∞—Ä–∫–∞ –∞–≤—Ç–æ–º–æ–±–∏–ª—è", open('marks_and_models/marks.txt', 'r', encoding='UTF-8').read().split('\n'))
        
        st.session_state.car_data['model'] = st.selectbox("–ú–æ–¥–µ–ª—å", open(f'marks_and_models/{st.session_state.car_data['mark']}.txt', 'r', encoding='UTF-8').read().split('\n'))
        
        st.session_state.car_data['year'] = st.slider(
            "–ì–æ–¥ –≤—ã–ø—É—Å–∫–∞", 
            min_value=1990, 
            max_value=2024, 
            value=2018
        )
        
        st.session_state.car_data['probeg'] = st.number_input(
            "–ü—Ä–æ–±–µ–≥ (–∫–º)", 
            min_value=0, 
            max_value=1000000, 
            value=50000
        )
    
    with col2:
        st.header("–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã")
        
        st.session_state.car_data['engine_volume'] = st.slider(
            "–û–±—ä–µ–º –¥–≤–∏–≥–∞—Ç–µ–ª—è (–ª)",
            min_value=0.5,
            max_value=6.0,
            value=2.0,
            step=0.1
        )
        
        st.session_state.car_data['condition'] = st.selectbox(
            "–°–æ—Å—Ç–æ—è–Ω–∏–µ",
            ["–û—Ç–ª–∏—á–Ω–æ–µ", "–•–æ—Ä–æ—à–µ–µ", "–£–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω–æ–µ", "–ü–ª–æ—Ö–æ–µ"]
        )
        
        st.session_state.car_data['transmission'] = st.radio(
            "–ö–æ—Ä–æ–±–∫–∞ –ø–µ—Ä–µ–¥–∞—á",
            ["–ê–≤—Ç–æ–º–∞—Ç", "–ú–µ—Ö–∞–Ω–∏–∫–∞", "–†–æ–±–æ—Ç", "–í–∞—Ä–∏–∞—Ç–æ—Ä"]
        )
        
        st.session_state.car_data['fuel_type'] = st.selectbox(
            "–¢–∏–ø —Ç–æ–ø–ª–∏–≤–∞",
            ["–ë–µ–Ω–∑–∏–Ω", "–î–∏–∑–µ–ª—å", "–ì–∏–±—Ä–∏–¥", "–≠–ª–µ–∫—Ç—Ä–æ"]
        )
    
    if st.button("üéØ –û—Ü–µ–Ω–∏—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å", type="primary", use_container_width=True):
        price = estimate_price_basic(
            st.session_state.car_data['mark'],
            st.session_state.car_data['model'],
            st.session_state.car_data['year'],
            st.session_state.car_data['probeg'],
            st.session_state.car_data['engine_volume'],
            st.session_state.car_data['condition']
        )
        
        st.success(f"### –û—Ü–µ–Ω–æ—á–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: {price:,.0f} ‚ÇΩ")
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –∏—Å—Ç–æ—Ä–∏—é
        appraisal_data = {
            **st.session_state.car_data,
            'price': price,
            'timestamp': datetime.now().strftime("%Y-%m-%d %H:%M:%S")
        }
        st.session_state.history_data = st.session_state.get('history_data', [])
        st.session_state.history_data.append(appraisal_data)